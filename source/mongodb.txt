命令行中
    mongod 显示数据库中的所有信息
    mongo 进入


    db.demos.find().count() 可以查看数据库文件长度

    db.find({counter,666}) 会报错
    2019-06-07T10:39:40.417+0800 E QUERY    [js] SyntaxError: missing : after property id @(shell):1:20
    解决方法：
        var tmp = {counter:666};
        db.find(tmp);

    db.demos.find({counter:{$lt:666,$gt:66}}).count()  lt 小于  gt 大于
    找到counter大于66但是小于666的数值个数

    db.demos.find().limit(10);
    找到前十条数据

    db.demos.find().skip(10).limit(10);
    从第十条开始，找到十条数据

    数据库导出
    mongoexport -d it -c demos -o "C:\data\tmp.json"
    -h,--host ：代表远程连接的数据库地址，默认连接本地Mongo数据库；
    --port：代表远程连接的数据库的端口，默认连接的远程端口27017；
    -u,--username：代表连接远程数据库的账号，如果设置数据库的认证，需要指定用户账号；
    -p,--password：代表连接数据库的账号对应的密码；
    -d,--db：代表连接的数据库；
    -c,--collection：代表连接数据库中的集合；
    -f, --fields：代表集合中的字段，可以根据设置选择导出的字段；
    --type：代表导出输出的文件类型，包括csv和json文件；
    -o, --out：代表导出的文件名；
    -q, --query：代表查询条件；
    --skip：跳过指定数量的数据；
    --limit：读取指定数量的数据记录；
    --sort：对数据进行排序，可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而-1是用于降序排列,如sort({KEY:1})。

    数据库导入
    mongoimport -d it -c demos --type json --file  "C:\data\tmp.json"
    
    -h,--host ：代表远程连接的数据库地址，默认连接本地Mongo数据库；
    --port：代表远程连接的数据库的端口，默认连接的远程端口27017；
    -u,--username：代表连接远程数据库的账号，如果设置数据库的认证，需要指定用户账号；
    -p,--password：代表连接数据库的账号对应的密码；
    -d,--db：代表连接的数据库；
    -c,--collection：代表连接数据库中的集合；
    -f, --fields：代表导入集合中的字段；
    --type：代表导入的文件类型，包括csv和json,tsv文件，默认json格式；
    --file：导入的文件名称
    --headerline：导入csv文件时，指明第一行是列名，不需要导入；



db.aANDb.insert({ name:"杨过"，wife:{name:"小龙女",sex:"女"},sex:"男" },{ name:"令狐冲",wife:{name:"任 盈盈",sex:"女"},sex"男" });

use it;
db;
db.colleges.insert([    以数组为类型插入
    {name:"HTML5"},
    {name:"JAVA"},
    {name:"PYTHON"},
    {name:"K12"},
    {name:"PHP",intro:"best language"}
    ])
    
db.colleges.find();   显示现在的数据
db.colleges.insert({   插入
    name:"Golang"
})

db.colleges.find({name:"HTML5"});

db.colleges.update({name:"HTML5"},{$set:{intro:"jsdh"}});

db.colleges.count();


db.colleges.update({name:"K12"},{$set:{name:"num"}});

db.colleges.update({name:"PHP"},{$unset:{"intro":1}});


db.colleges.update({name:"HTML5"},{$set:{classes:{base:["h5+c3","js","JQUERY","abc"],core:["vue","node.js"]}}});

db.colleges.find({"classes.core":"vue"});

db.colleges.update({name:"HTML5"},{$push:{"classes.core":"wechat"}});
db.colleges.update({name:"HTML5"},{$addToSet:{"classes.core":"jiejie"}});
db.colleges.update({name:"HTML5"},{$pop:{"classes.core":"vu"}});


db.colleges.find();
